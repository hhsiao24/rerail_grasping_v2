// Auto-generated. Do not edit!

// (in-package rail_manipulation_msgs.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class PrimitiveGoal {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.primitive_type = null;
      this.axis = null;
      this.distance = null;
    }
    else {
      if (initObj.hasOwnProperty('primitive_type')) {
        this.primitive_type = initObj.primitive_type
      }
      else {
        this.primitive_type = 0;
      }
      if (initObj.hasOwnProperty('axis')) {
        this.axis = initObj.axis
      }
      else {
        this.axis = 0;
      }
      if (initObj.hasOwnProperty('distance')) {
        this.distance = initObj.distance
      }
      else {
        this.distance = 0.0;
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type PrimitiveGoal
    // Serialize message field [primitive_type]
    bufferOffset = _serializer.uint8(obj.primitive_type, buffer, bufferOffset);
    // Serialize message field [axis]
    bufferOffset = _serializer.uint8(obj.axis, buffer, bufferOffset);
    // Serialize message field [distance]
    bufferOffset = _serializer.float64(obj.distance, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type PrimitiveGoal
    let len;
    let data = new PrimitiveGoal(null);
    // Deserialize message field [primitive_type]
    data.primitive_type = _deserializer.uint8(buffer, bufferOffset);
    // Deserialize message field [axis]
    data.axis = _deserializer.uint8(buffer, bufferOffset);
    // Deserialize message field [distance]
    data.distance = _deserializer.float64(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    return 10;
  }

  static datatype() {
    // Returns string type for a message object
    return 'rail_manipulation_msgs/PrimitiveGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return 'c76a07691fd7d25efb98e8b7f78daf49';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    # Define the goal
    
    #actions
    uint8 TRANSLATION=0
    uint8 ROTATION=1
    
    #axes
    uint8 X_AXIS=0
    uint8 Y_AXIS=1
    uint8 Z_AXIS=2
    
    uint8 primitive_type    # type of primitive action
    uint8 axis              # axis of translation/rotation
    float64 distance        # distance to perform the action (in m or rad)
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new PrimitiveGoal(null);
    if (msg.primitive_type !== undefined) {
      resolved.primitive_type = msg.primitive_type;
    }
    else {
      resolved.primitive_type = 0
    }

    if (msg.axis !== undefined) {
      resolved.axis = msg.axis;
    }
    else {
      resolved.axis = 0
    }

    if (msg.distance !== undefined) {
      resolved.distance = msg.distance;
    }
    else {
      resolved.distance = 0.0
    }

    return resolved;
    }
};

// Constants for message
PrimitiveGoal.Constants = {
  TRANSLATION: 0,
  ROTATION: 1,
  X_AXIS: 0,
  Y_AXIS: 1,
  Z_AXIS: 2,
}

module.exports = PrimitiveGoal;
