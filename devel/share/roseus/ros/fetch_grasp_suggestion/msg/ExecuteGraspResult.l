;; Auto-generated. Do not edit!


(when (boundp 'fetch_grasp_suggestion::ExecuteGraspResult)
  (if (not (find-package "FETCH_GRASP_SUGGESTION"))
    (make-package "FETCH_GRASP_SUGGESTION"))
  (shadow 'ExecuteGraspResult (find-package "FETCH_GRASP_SUGGESTION")))
(unless (find-package "FETCH_GRASP_SUGGESTION::EXECUTEGRASPRESULT")
  (make-package "FETCH_GRASP_SUGGESTION::EXECUTEGRASPRESULT"))

(in-package "ROS")
;;//! \htmlinclude ExecuteGraspResult.msg.html


(intern "*APPROACH*" (find-package "FETCH_GRASP_SUGGESTION::EXECUTEGRASPRESULT"))
(shadow '*APPROACH* (find-package "FETCH_GRASP_SUGGESTION::EXECUTEGRASPRESULT"))
(defconstant fetch_grasp_suggestion::ExecuteGraspResult::*APPROACH* -1)
(intern "*GRASP_PLAN*" (find-package "FETCH_GRASP_SUGGESTION::EXECUTEGRASPRESULT"))
(shadow '*GRASP_PLAN* (find-package "FETCH_GRASP_SUGGESTION::EXECUTEGRASPRESULT"))
(defconstant fetch_grasp_suggestion::ExecuteGraspResult::*GRASP_PLAN* -2)
(intern "*GRASP_EXECUTION*" (find-package "FETCH_GRASP_SUGGESTION::EXECUTEGRASPRESULT"))
(shadow '*GRASP_EXECUTION* (find-package "FETCH_GRASP_SUGGESTION::EXECUTEGRASPRESULT"))
(defconstant fetch_grasp_suggestion::ExecuteGraspResult::*GRASP_EXECUTION* -3)
(intern "*PICK_UP_PLAN*" (find-package "FETCH_GRASP_SUGGESTION::EXECUTEGRASPRESULT"))
(shadow '*PICK_UP_PLAN* (find-package "FETCH_GRASP_SUGGESTION::EXECUTEGRASPRESULT"))
(defconstant fetch_grasp_suggestion::ExecuteGraspResult::*PICK_UP_PLAN* -4)
(intern "*PICK_UP_EXECUTION*" (find-package "FETCH_GRASP_SUGGESTION::EXECUTEGRASPRESULT"))
(shadow '*PICK_UP_EXECUTION* (find-package "FETCH_GRASP_SUGGESTION::EXECUTEGRASPRESULT"))
(defconstant fetch_grasp_suggestion::ExecuteGraspResult::*PICK_UP_EXECUTION* -5)

(defun fetch_grasp_suggestion::ExecuteGraspResult-to-symbol (const)
  (cond
        ((= const -1) 'fetch_grasp_suggestion::ExecuteGraspResult::*APPROACH*)
        ((= const -2) 'fetch_grasp_suggestion::ExecuteGraspResult::*GRASP_PLAN*)
        ((= const -3) 'fetch_grasp_suggestion::ExecuteGraspResult::*GRASP_EXECUTION*)
        ((= const -4) 'fetch_grasp_suggestion::ExecuteGraspResult::*PICK_UP_PLAN*)
        ((= const -5) 'fetch_grasp_suggestion::ExecuteGraspResult::*PICK_UP_EXECUTION*)
        (t nil)))

(defclass fetch_grasp_suggestion::ExecuteGraspResult
  :super ros::object
  :slots (_success _error_code _failure_point ))

(defmethod fetch_grasp_suggestion::ExecuteGraspResult
  (:init
   (&key
    ((:success __success) nil)
    ((:error_code __error_code) 0)
    ((:failure_point __failure_point) 0)
    )
   (send-super :init)
   (setq _success __success)
   (setq _error_code (round __error_code))
   (setq _failure_point (round __failure_point))
   self)
  (:success
   (&optional (__success :null))
   (if (not (eq __success :null)) (setq _success __success)) _success)
  (:error_code
   (&optional __error_code)
   (if __error_code (setq _error_code __error_code)) _error_code)
  (:failure_point
   (&optional __failure_point)
   (if __failure_point (setq _failure_point __failure_point)) _failure_point)
  (:serialization-length
   ()
   (+
    ;; bool _success
    1
    ;; int32 _error_code
    4
    ;; int32 _failure_point
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; bool _success
       (if _success (write-byte -1 s) (write-byte 0 s))
     ;; int32 _error_code
       (write-long _error_code s)
     ;; int32 _failure_point
       (write-long _failure_point s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; bool _success
     (setq _success (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;; int32 _error_code
     (setq _error_code (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; int32 _failure_point
     (setq _failure_point (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get fetch_grasp_suggestion::ExecuteGraspResult :md5sum-) "9bba17e65f1c009d25847ade82781e83")
(setf (get fetch_grasp_suggestion::ExecuteGraspResult :datatype-) "fetch_grasp_suggestion/ExecuteGraspResult")
(setf (get fetch_grasp_suggestion::ExecuteGraspResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
int32 APPROACH=-1                     # Failure to plan or move to approach pose
int32 GRASP_PLAN=-2                   # Failure to plan from approach pose to grasp pose
int32 GRASP_EXECUTION=-3              # Failure to execute trajectory to grasp pose
int32 PICK_UP_PLAN=-4                 # Failure to plan to pick up pose
int32 PICK_UP_EXECUTION=-5            # Failure to execute trajectory to pick up pose

bool success                          # True if the object is verified to be in the gripper after pickup
int32 error_code                       # MoveIt error code (as defined in moveit_msgs/MoveItErrorCodes.msg)
int32 failure_point                    # What stage of the action failed

")



(provide :fetch_grasp_suggestion/ExecuteGraspResult "9bba17e65f1c009d25847ade82781e83")


